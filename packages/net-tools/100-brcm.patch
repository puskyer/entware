--- a/include/mii.h
+++ b/include/mii.h
@@ -36,2 +36,3 @@
 #define  MII_BMCR_AN_ENA	0x1000
+#define  MII_BMCR_POWERDONW	0x0800
 #define  MII_BMCR_ISOLATE	0x0400
@@ -40,2 +41,3 @@
 #define  MII_BMCR_COLTEST	0x0080
+#define  MII_BMCR_1000MBIT	0x0040
 
@@ -44,14 +46,17 @@
 #define  MII_BMSR_CAP_MASK	0xf800
-#define  MII_BMSR_100BASET4	0x8000
-#define  MII_BMSR_100BASETX_FD	0x4000
-#define  MII_BMSR_100BASETX_HD	0x2000
-#define  MII_BMSR_10BASET_FD	0x1000
-#define  MII_BMSR_10BASET_HD	0x0800
+#define  MII_BMSR_100BASET4	0x8000	/* Can do 100mbps, 4k packets  */
+#define  MII_BMSR_100BASETX_FD	0x4000	/* Can do 100mbps, full-duplex */
+#define  MII_BMSR_100BASETX_HD	0x2000	/* Can do 100mbps, half-duplex */
+#define  MII_BMSR_10BASET_FD	0x1000	/* Can do 10mbps, full-duplex  */
+#define  MII_BMSR_10BASET_HD	0x0800	/* Can do 10mbps, half-duplex  */
+#define  MII_BMSR_100FULL2	0x0400	/* Can do 100BASE-T2 FDX */
+#define  MII_BMSR_100HALF2	0x0200	/* Can do 100BASE-T2 HDX */
+#define  MII_BMSR_ESTATEN	0x0100  /* Extended Status in R15 */
 #define  MII_BMSR_NO_PREAMBLE	0x0040
-#define  MII_BMSR_AN_COMPLETE	0x0020
-#define  MII_BMSR_REMOTE_FAULT	0x0010
-#define  MII_BMSR_AN_ABLE	0x0008
-#define  MII_BMSR_LINK_VALID	0x0004
-#define  MII_BMSR_JABBER	0x0002
-#define  MII_BMSR_EXT_CAP	0x0001
+#define  MII_BMSR_AN_COMPLETE	0x0020	/* Auto-negotiation complete   */
+#define  MII_BMSR_REMOTE_FAULT	0x0010	/* Remote fault detected       */
+#define  MII_BMSR_AN_ABLE	0x0008	/* Able to do auto-negotiation */
+#define  MII_BMSR_LINK_VALID	0x0004	/* Link status                 */
+#define  MII_BMSR_JABBER	0x0002	/* Jabber detected             */
+#define  MII_BMSR_ERCAP		0x0001	/* Ext-reg capability          */
 
@@ -67,3 +72,3 @@
 #define  MII_AN_REMOTE_FAULT	0x2000
-#define  MII_AN_ABILITY_MASK	0x07e0
+#define  MII_AN_ABILITY_MASK	(MII_AN_FLOW_CONTROL|MII_AN_100BASET4|MII_AN_100BASETX_FD|MII_AN_100BASETX_HD|MII_AN_10BASET_FD|MII_AN_10BASET_HD)
 #define  MII_AN_FLOW_CONTROL	0x0400
@@ -85,2 +90,29 @@
 
+/* Gigabit Registers */
+#define MII_CTRL1000		0x09
+#define   MII_AN2_UNKNOWN1	0x0800
+#define   MII_AN2_UNKNOWN2	0x0400
+#define   MII_AN2_1000FULL	0x0200
+#define   MII_AN2_1000HALF	0x0100
+
+#define MII_STAT1000		0x0a
+#define   MII_LPA2_UNKNOWN1	0x4000
+#define   MII_LPA2_1000LOCALOK	0x2000
+#define   MII_LPA2_1000REMRXOK	0x1000
+#define   MII_LPA2_1000FULL	0x0800
+#define   MII_LPA2_1000HALF	0x0400
+
+#define MII_ESTAT1000		0x0f
+#define   MII_EST_1000THALF	0x1000		/* 1000BASE-T half duplex capable */
+#define   MII_EST_1000TFULL	0x2000		/* 1000BASE-T full duplex capable */
+#define   MII_EST_1000XHALF	0x4000		/* 1000BASE-X half duplex capable */
+#define   MII_EST_1000XFULL	0x8000		/* 1000BASE-X full duplex capable */
+
+/* Last register we need for show_basic_mii() */
+#define MII_BASIC_MAX		MII_STAT1000
+
+#define MII_MAXPHYREG		32
+#define EPHY_NONE		31	/* nvram: no phy present at all */
+#define EPHY_NOREG		30	/* nvram: no local phy regs */
+
 #endif /* _LINUX_MII_H */
--- a/mii-tool.c
+++ b/mii-tool.c
@@ -32,3 +32,3 @@
 static char version[] =
-"mii-tool.c 1.9 2000/04/28 00:56:08 (David Hinds)\n";
+"mii-tool.c 1.9.1 2000/04/28 00:56:08 (David Hinds)\n";
 
@@ -48,2 +48,4 @@
 #include <net/if.h>
+#include <linux/sockios.h>
+
 #ifndef __GLIBC__
@@ -57,5 +59,5 @@
 /* Table of known MII's */
-static struct {
+static const struct {
     u_short	id1, id2;
-    char	*name;
+    const char	*name;
 } mii_id[] = {
@@ -76,2 +78,5 @@
     { 0x0300, 0xe540, "TDK 78Q2120" },
+    { 0x0141, 0x0c20, "Yukon 88E1011" },
+    { 0x0141, 0x0cc0, "Yukon-EC 88E1111" },
+    { 0x0141, 0x0c90, "Yukon-2 88E1112" },
 };
@@ -86,3 +91,3 @@
     {"phy",		1, 0, 'p'},	/* Set PHY (MII address) to report. */
-    {"log",		0, 0, 'l'},	/* Set PHY (MII address) to report. */
+    {"log",		0, 0, 'l'},	/* Write events to syslog. */
     {"restart",		0, 0, 'r'},	/* Restart link negotiation */
@@ -103,8 +108,8 @@
     opt_watch = 0;
-static int nway_advertise = 0;
-static int fixed_speed = 0;
+static u_long nway_advertise = 0;
+static u_long fixed_speed = 0;
 static int override_phy = -1;
 
-static int skfd = -1;		/* AF_INET socket for ioctl() calls. */
 static struct ifreq ifr;
+static int supports_gmii;
 
@@ -115,2 +120,3 @@
     struct mii_data *mii = (struct mii_data *)&ifr.ifr_data;
+
     mii->reg_num = location;
@@ -127,2 +133,3 @@
     struct mii_data *mii = (struct mii_data *)&ifr.ifr_data;
+
     mii->reg_num = location;
@@ -139,12 +146,16 @@
     char	*name;
-    u_short	value;
+    u_short	value[2];
 } media[] = {
     /* The order through 100baseT4 matches bits in the BMSR */
-    { "10baseT-HD",	MII_AN_10BASET_HD },
-    { "10baseT-FD",	MII_AN_10BASET_FD },
-    { "100baseTx-HD",	MII_AN_100BASETX_HD },
-    { "100baseTx-FD",	MII_AN_100BASETX_FD },
-    { "100baseT4",	MII_AN_100BASET4 },
-    { "100baseTx",	MII_AN_100BASETX_FD | MII_AN_100BASETX_HD },
-    { "10baseT",	MII_AN_10BASET_FD | MII_AN_10BASET_HD },
+    { "10baseT-HD",	{MII_AN_10BASET_HD,   0} },
+    { "10baseT-FD",	{MII_AN_10BASET_FD,   0} },
+    { "100baseTx-HD",	{MII_AN_100BASETX_HD, 0} },
+    { "100baseTx-FD",	{MII_AN_100BASETX_FD, 0} },
+    { "100baseT4",	{MII_AN_100BASET4,    0} },
+    { "100baseTx",	{MII_AN_100BASETX_FD | MII_AN_100BASETX_HD, 0} },
+    { "10baseT",	{MII_AN_10BASET_FD | MII_AN_10BASET_HD, 0} },
+
+    { "1000baseT-HD",	{0, MII_AN2_1000HALF} },
+    { "1000baseT-FD",	{0, MII_AN2_1000FULL} },
+    { "1000baseT",	{0, MII_AN2_1000HALF|MII_AN2_1000FULL} },
 };
@@ -153,6 +164,8 @@
 /* Parse an argument list of media types */
-static int parse_media(char *arg)
+static u_long parse_media(char *arg)
 {
-    int mask, i;
+    int i;
+    u_long mask;
     char *s;
+
     mask = strtoul(arg, &s, 16);
@@ -160,9 +173,10 @@
 	if ((mask & MII_AN_ABILITY_MASK) &&
-	    !(mask & ~MII_AN_ABILITY_MASK))
-	    return mask;
+	    !(mask & ~MII_AN_ABILITY_MASK)) {
+		return mask;
+	}
 	goto failed;
-    } else {
-	mask = 0;
-	s = strtok(arg, ", ");
-	do {
+    }
+    mask = 0;
+    s = strtok(arg, ", ");
+    do {
 	    for (i = 0; i < NMEDIA; i++)
@@ -170,5 +184,6 @@
 	    if (i == NMEDIA) goto failed;
-	    mask |= media[i].value;
-	} while ((s = strtok(NULL, ", ")) != NULL);
-    }
+	    mask |= media[i].value[0];
+	    mask |= media[i].value[1] << 16;
+    } while ((s = strtok(NULL, ", ")) != NULL);
+
     return mask;
@@ -181,3 +196,3 @@
 
-static char *media_list(int mask, int best)
+static const char *media_list(unsigned mask, unsigned mask2, int best)
 {
@@ -186,2 +201,13 @@
     *buf = '\0';
+
+    if (supports_gmii) {
+	for (i = 8; i >= 7; i--) {
+	    if (mask2 & media[i].value[1]) {
+		strcat(buf, " ");
+		strcat(buf, media[i].name);
+		if (best) goto out;
+	    }
+	}
+    }
+
     mask >>= 5;
@@ -194,2 +220,3 @@
     }
+ out:
     if (mask & (1<<5))
@@ -199,7 +226,8 @@
 
-int show_basic_mii(int sock, int phy_id)
+static int show_basic_mii(int sock, int phy_id)
 {
-    char buf[100];
-    int i, mii_val[32];
-    int bmcr, bmsr, advert, lkpar;
+    char buf[128];
+    int i;
+    u_short mii_val[MII_MAXPHYREG];
+    unsigned bmcr, bmsr, advert, lkpar, bmcr2, bmsr2, lpa2;
 
@@ -208,3 +236,3 @@
     mdio_read(sock, MII_BMSR);
-    for (i = 0; i < ((verbose > 1) ? 32 : 8); i++)
+    for (i = 0; i < ((verbose > 1) ? MII_MAXPHYREG : MII_BASIC_MAX+1); i++)
 	mii_val[i] = mdio_read(sock, i);
@@ -219,2 +247,5 @@
     advert = mii_val[MII_ANAR]; lkpar = mii_val[MII_ANLPAR];
+    /* Gigabit registers */
+    bmcr2 = mii_val[MII_CTRL1000]; lpa2 = mii_val[MII_STAT1000];
+    bmsr2 = mii_val[MII_ESTAT1000];
 
@@ -226,3 +257,3 @@
 		       "negotiated" : "no autonegotiation,");
-		strcat(buf, media_list(advert & lkpar, 1));
+		strcat(buf, media_list(advert & lkpar, bmcr2 & (lpa2>>2), 1));
 		strcat(buf, ", ");
@@ -236,4 +267,5 @@
 	sprintf(buf+strlen(buf), "%s Mbit, %s duplex, ",
-	       (bmcr & MII_BMCR_100MBIT) ? "100" : "10",
-	       (bmcr & MII_BMCR_DUPLEX) ? "full" : "half");
+		 (bmcr & MII_BMCR_1000MBIT) ? "1000"
+		: (bmcr & MII_BMCR_100MBIT) ? "100" : "10",
+		   (bmcr & MII_BMCR_DUPLEX) ? "full" : "half");
     }
@@ -256,3 +288,3 @@
 	printf("  registers for MII PHY %d: ", phy_id);
-	for (i = 0; i < 32; i++)
+	for (i = 0; i < MII_MAXPHYREG; i++)
 	    printf("%s %4.4x", ((i % 8) ? "" : "\n   "), mii_val[i]);
@@ -264,12 +296,12 @@
 	for (i = 0; i < NMII; i++)
-	    if ((mii_id[i].id1 == mii_val[2]) &&
-		(mii_id[i].id2 == (mii_val[3] & 0xfff0)))
+	    if ((mii_id[i].id1 ==  mii_val[MII_PHY_ID1]) &&
+		(mii_id[i].id2 == (mii_val[MII_PHY_ID2] & 0xfff0)))
 		break;
 	if (i < NMII)
-	    printf("%s rev %d\n", mii_id[i].name, mii_val[3]&0x0f);
+	    printf("%s rev %d\n", mii_id[i].name, mii_val[MII_PHY_ID2]&0x0f);
 	else
 	    printf("vendor %02x:%02x:%02x, model %d rev %d\n",
-		   mii_val[2]>>10, (mii_val[2]>>2)&0xff,
-		   ((mii_val[2]<<6)|(mii_val[3]>>10))&0xff,
-		   (mii_val[3]>>4)&0x3f, mii_val[3]&0x0f);
+		   mii_val[MII_PHY_ID1]>>10, (mii_val[MII_PHY_ID1]>>2)&0xff,
+		   ((mii_val[MII_PHY_ID1]<<6)|(mii_val[MII_PHY_ID2]>>10))&0xff,
+		   (mii_val[MII_PHY_ID2]>>4)&0x3f, mii_val[MII_PHY_ID2]&0x0f);
 	printf("  basic mode:   ");
@@ -287,3 +319,4 @@
 	    printf("%s Mbit, %s duplex\n",
-		   (bmcr & MII_BMCR_100MBIT) ? "100" : "10",
+		 (bmcr & MII_BMCR_1000MBIT) ? "1000"
+		: (bmcr & MII_BMCR_100MBIT) ? "100" : "10",
 		   (bmcr & MII_BMCR_DUPLEX) ? "full" : "half");
@@ -298,6 +331,6 @@
 	printf((bmsr & MII_BMSR_LINK_VALID) ? "link ok" : "no link");
-	printf("\n  capabilities:%s", media_list(bmsr >> 6, 0));
-	printf("\n  advertising: %s", media_list(advert, 0));
+	printf("\n  capabilities:%s", media_list(bmsr >> 6, bmsr2 >> 4, 0));
+	printf("\n  advertising: %s", media_list(advert, bmcr2, 0));
 	if (lkpar & MII_AN_ABILITY_MASK)
-	    printf("\n  link partner:%s", media_list(lkpar, 0));
+	    printf("\n  link partner:%s", media_list(lkpar, lpa2 >> 2, 0));
 	printf("\n");
@@ -309,3 +342,3 @@
 
-static int do_one_xcvr(int skfd, char *ifname, int maybe)
+static inline int ifr_prep(int skfd, char *ifname, int maybe)
 {
@@ -325,4 +358,22 @@
 	mii->phy_id = override_phy;
+    } else if (mii->phy_id == EPHY_NOREG) {
+	mii->phy_id = 0;
     }
 
+    supports_gmii = 0;
+    if (mdio_read(skfd, MII_BMSR) & MII_BMSR_ESTATEN)
+	supports_gmii = mdio_read(skfd, MII_ESTAT1000) & 0xf000;
+
+    return 0;
+}
+
+/*--------------------------------------------------------------------*/
+
+static int do_one_xcvr(int skfd, char *ifname, int maybe)
+{
+    struct mii_data *mii = (struct mii_data *)&ifr.ifr_data;
+
+    if (ifr_prep(skfd, ifname, maybe))
+	return 1;
+
     if (opt_reset) {
@@ -332,3 +383,9 @@
     if (nway_advertise) {
-	mdio_write(skfd, MII_ANAR, nway_advertise | 1);
+	if (supports_gmii) {
+	    int bmcr2 = mdio_read(skfd, MII_CTRL1000);
+	    bmcr2 &= ~(MII_AN2_1000HALF|MII_AN2_1000FULL);
+	    bmcr2 |= (nway_advertise >> 16) & (MII_AN2_1000HALF|MII_AN2_1000FULL);
+	    mdio_write(skfd, MII_CTRL1000, bmcr2);
+	}
+	mdio_write(skfd, MII_ANAR, (nway_advertise | 1) & 0xffff);
 	opt_restart = 1;
@@ -342,5 +399,7 @@
 	int bmcr = 0;
+	if (fixed_speed & ((MII_AN2_1000HALF<<16)|(MII_AN2_1000FULL<<16)))
+	    bmcr |= MII_BMCR_1000MBIT;
 	if (fixed_speed & (MII_AN_100BASETX_FD|MII_AN_100BASETX_HD))
 	    bmcr |= MII_BMCR_100MBIT;
-	if (fixed_speed & (MII_AN_100BASETX_FD|MII_AN_10BASET_FD))
+	if (fixed_speed & (MII_AN_100BASETX_FD|MII_AN_10BASET_FD|(MII_AN2_1000FULL<<16)))
 	    bmcr |= MII_BMCR_DUPLEX;
@@ -361,12 +420,7 @@
     static int status[MAX_ETH] = { 0, /* ... */ };
-    int now;
+    u_long now;
 
-    /* Get the vitals from the interface. */
-    strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
-    if (ioctl(skfd, SIOCGMIIPHY, &ifr) < 0) {
-	if (errno != ENODEV)
-	    fprintf(stderr, "SIOCGMIIPHY on '%s' failed: %s\n",
-		    ifname, strerror(errno));
+    if (ifr_prep(skfd, ifname, 0))
 	return;
-    }
+
     now = (mdio_read(skfd, MII_BMCR) |
@@ -381,13 +435,15 @@
 const char *usage =
-"usage: %s [-VvRrwl] [-A media,... | -F media] [interface ...]\n\
-       -V, --version               display version information\n\
-       -v, --verbose               more verbose output\n\
-       -R, --reset                 reset MII to poweron state\n\
-       -r, --restart               restart autonegotiation\n\
-       -w, --watch                 monitor for link status changes\n\
-       -l, --log                   with -w, write events to syslog\n\
-       -A, --advertise=media,...   advertise only specified media\n\
-       -F, --force=media           force specified media technology\n\
-media: 100baseT4, 100baseTx-FD, 100baseTx-HD, 10baseT-FD, 10baseT-HD,\n\
-       (to advertise both HD and FD) 100baseTx, 10baseT\n";
+"usage: %s [-VvRrwl] [-A media,... | -F media] [-p port] [interface ...]\n"
+"       -V, --version               display version information\n"
+"       -v, --verbose               more verbose output\n"
+"       -R, --reset                 reset MII to poweron state\n"
+"       -r, --restart               restart autonegotiation\n"
+"       -w, --watch                 monitor for link status changes\n"
+"       -l, --log                   with -w, write events to syslog\n"
+"       -A, --advertise=media,...   advertise only specified media\n"
+"       -F, --force=media           force specified media technology\n"
+"       -p, --phy=port              override PHY port number\n"
+"media: 1000baseT-FD, 1000baseT-HD, 100baseT4, 100baseTx-FD, 100baseTx-HD,\n"
+"       10baseT-FD, 10baseT-HD,\n"
+"       (to advertise both HD and FD) 1000baseT, 100baseTx, 10baseT\n";
 
@@ -395,5 +451,6 @@
 {
-    int i, c, ret, errflag = 0;
+    int skfd;		/* AF_INET socket for ioctl() calls. */
+    int i, c, ret, helpflag = 0;
     char s[6];
-    
+
     while ((c = getopt_long(argc, argv, "A:F:p:lrRvVw?", longopts, 0)) != EOF)
@@ -401,4 +458,4 @@
 	case 'A': nway_advertise = parse_media(optarg); break;
-	case 'F': fixed_speed = parse_media(optarg); break;
-	case 'p': override_phy = atoi(optarg); break;
+	case 'F': fixed_speed = parse_media(optarg);	break;
+	case 'p': override_phy = atoi(optarg);		break;
 	case 'r': opt_restart++;	break;
@@ -409,3 +466,3 @@
 	case 'l': opt_log++;		break;
-	case '?': errflag++;
+	case '?': helpflag++;		break;
 	}
@@ -413,3 +470,3 @@
     if (opt_watch) verbose = 0;
-    if (errflag || (fixed_speed & (fixed_speed-1)) ||
+    if (helpflag || (fixed_speed & (fixed_speed-1)) ||
 	(fixed_speed && (opt_restart || nway_advertise))) {
